const express = require("express"); const cors = require("cors"); const app = express(); const PORT = process.env.PORT || 3000; app.use(cors()); app.use(express.json()); app.use(express.static(".")); const hasMongoDB = process.env.MONGODB_URI && process.env.MONGODB_URI !== "mongodb://localhost:27017/souljourney"; app.get("/api/test", (req, res) => { res.json({ message: "Server working!", database: hasMongoDB ? "Connected" : "Demo", timestamp: new Date().toISOString() }); }); app.post("/api/calculate", async (req, res) => { const { name, birthDate, birthTime, birthPlace } = req.body; const chartData = { name, birthDate, birthTime, birthPlace, generated: new Date().toISOString(), chartType: hasMongoDB ? "KP Real Chart" : "KP Demo Chart", planets: [{ planet: "Sun", degree: "15° 30\"", sign: "Aries", nakshatra: "Bharani" }, { planet: "Moon", degree: "25° 45\"", sign: "Taurus", nakshatra: "Rohini" }], houses: { "Aries": ["Sun"], "Taurus": ["Moon"], "Gemini": [], "Cancer": [], "Leo": [], "Virgo": [], "Libra": [], "Scorpio": [], "Sagittarius": [], "Capricorn": [], "Aquarius": [], "Pisces": [] } }; res.json({ success: true, chart: chartData, message: hasMongoDB ? `Real chart for ${name}` : `Demo chart for ${name}`, database: hasMongoDB ? "connected" : "demo" }); }); app.get("/", (req, res) => { res.sendFile(__dirname + "/index.html"); }); app.listen(PORT, () => { console.log(`Server running on port ${PORT}`); console.log(`Database: ${hasMongoDB ? "Connected" : "Demo Mode"}`); });
