So what I'm planning to do is, for now, it's like a hobby project. Once I fine-tune everything, make it ready, I'm going to release this as a dating app. So the dating app works like a bumble. When they sign in, I will ask the details of date of birth, place of birth, time of birth. Once they submit, it should go to the engine. And the engine classifies and gives them the tag based on astrology. That giving process based on the tag is where my knowledge, my rules, logics, AI learning, pattern analysis comes in. And gives a tag. For now, I give tag A. When the user submits, I'm going to give tag A. Or I will have simple rule, 1990 tag A. When other user 1990 submits, it's going to get the same tag. The mobile app of the person only shows the person who has the same tag A. So they are only visible to each other. That's the principle. Later, there are too many people, too many 20 tags, there are 2000 people. Among the 2000 people who have a common tag will only be visible to each other. That's the core idea. The final output I need to achieve. To achieve that final output, I need to work on the basics of astrology, AI learning, everything. Right now, I'm using you to build a prototype. A basic one. So whatever data, birth details I have, I'm going to put it in ChatGPT. And ChatGPT is going to push it to you in a required format. And you are going to store it in the database. Same time, everything. And also, the other areas of astrology calculations, everything. I don't know how to work. Currently, I think you are using the planetary engine to pull the planet position of that particular data. Just a zodiac sign planet positions. And that's okay. And based on that planet positions, there's the other concept called KP astrology. The intense report, which I showed, does all the calculations. And that was done by the desktop application, for which I tried to decode the source file. I'm not able to do it. Once I have the logic, I will put that logic in the web app. So once you get the data, details of the birth details, everything, you're going to store it. If there's a simple rule, you're going to give the tag and you're going to map the user. That's fine. That's a simple process. And once you have the data, details, everything, then the engine itself need to do all the calculations and store it somehow. And you need to do the calculation. I don't know how the logic works, what it's going to do, how it's going to store data. All those ideas I don't have. Wherever it stores, that needs to be accessible by the AI, which is about finding the patterns, which has deep knowledge about it. So the more users come, more data saves there. And based on our research, my knowledge, KP books, all the knowledge I upload. That engine is going to look into those combinations and it's going to assign them properties. And with that property, they will play around and try to find a better prediction. And then I will update the tags categories. So the dating profile matches high accuracy. So to do that, I don't know what to do. So you are creating an app. Once you have the prototype ready and it is fully functional, I can download that and put it in a website because the cost is very high. Whenever I need to change it, I'm going to download the prototype and give it to you and do the necessary changes and push it to you. So what do you think? How can we achieve this? This is my idea. And what are the AI I need? Maybe for now, I'm happy to download the LLM DeepSeek or something, whatever you suggest in my mission. And if possible, if the prototype is working, I'm going to run everything on my Mac Mini and fine tune it. Once I'm happy, then I will put it. I will add the larger data set. I'm a little confused. Guide me, please.